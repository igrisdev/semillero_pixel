---
import Container from '@share_components/Container.astro'
import CartPublication from '@components/home/CartPublication.astro'
import Layout from '@layouts/Layout.astro'
import Split from '@share_components/Split.astro'

import Row from '@assets/icons/row.svg'
import Grid from '@assets/icons/grid.svg'

import { getHomePublicationCard } from '@lib/api/get-home-publication-card'
import { parsePublications } from '@lib/parsePublications'

const publications: any[] = await getHomePublicationCard()

const isYear = new Date().getFullYear()

const newPublications = parsePublications(publications)

const filterPublications = new Set()

newPublications.forEach(({ publications }) => {
  publications.forEach((publication: any) => {
    const { types } = publication

    types.forEach((type: any) => {
      filterPublications.add(type.title)
    })
  })
})

const types = Array.from(filterPublications)
---

<Layout title='Artículos'>
  <Split />
  <Container styles='py-10 grid gap-10'>
    <h2
      class='text-theme-title text-2xl sm:text-4xl font-bold uppercase mb-2 text-center'
    >
      Publicaciones
    </h2>

    <div class='grid gap-10'>
      <section class='flex gap-4 justify-between items-center flex-wrap'>
        <div class='flex flex-wrap gap-2 text-theme-text'>
          <button
            class='text-sm bg-theme-decoration/10 py-1 px-4 border-1 border-theme-decoration cursor-pointer'
          >
            Todos
          </button>

          {
            types.map((type: any) => (
              <button class='text-sm py-1 px-4 border-1 border-theme-decoration cursor-pointer'>
                {type}
              </button>
            ))
          }
        </div>

        <div>
          <button
            id='btn-toggle-view-publications'
            class='grid place-content-center size-7 text-theme-text cursor-pointer'
            data-state='time-line'
          >
            <Grid class='w-full h-full to-years' />
            <Row class='w-full h-full time-line' />
          </button>
        </div>
      </section>

      <section class='to-years grid grid-cols-1 gap-5 md:grid-cols-2'>
        {
          newPublications.map(({ publications }) =>
            publications.map((publication: any) => (
              <CartPublication {...publication} />
            ))
          )
        }
      </section>

      <section class='time-line pl-4 border-l-2 border-theme-split grid gap-4'>
        {
          newPublications.map(({ year, publications }) => (
            <div class='flex flex-col gap-2'>
              <header class='relative'>
                <span class='text-sm text-theme-title'>
                  {isYear.toString() === year ? 'Ahora' : year}
                </span>
                <div class='size-3 bg-theme-decoration rounded-full absolute -left-[23px] top-[7px]' />
              </header>

              <section class='grid grid-cols-1 gap-5 md:grid-cols-2'>
                {publications.map((publication: any) => (
                  <CartPublication {...publication} />
                ))}
              </section>
            </div>
          ))
        }
      </section>
    </div>
  </Container>
</Layout>

<!-- Seleccionar si quiero ver los artículos por años o por linea de tiempo -->
<script is:inline>
  const btnToggleViewArticles = document.querySelector(
    '#btn-toggle-view-publications'
  )

  const toYears = document.querySelectorAll('.to-years')
  const timeLine = document.querySelectorAll('.time-line')

  if (btnToggleViewArticles.dataset.state === 'to-years') {
    handleTimeLine()
  } else {
    handleToYear()
  }

  btnToggleViewArticles.addEventListener('click', e => {
    const type = e.currentTarget.dataset.state

    if (type === 'to-years') {
      handleToYear()
    } else {
      handleTimeLine()
    }

    const newType = type === 'to-years' ? 'time-line' : 'to-years'

    btnToggleViewArticles.setAttribute('data-state', newType)
  })

  function handleToYear() {
    toYears.forEach(el => el.classList.remove('hidden'))
    timeLine.forEach(el => el.classList.add('hidden'))
  }

  function handleTimeLine() {
    toYears.forEach(el => el.classList.add('hidden'))
    timeLine.forEach(el => el.classList.remove('hidden'))
  }
</script>

<!-- Filtrar los artículos por años seleccionados  -->
