---
import Container from '@share_components/Container.astro'
import CartArticle from '@components/home/CartArticle.astro'
import Layout from '@layouts/Layout.astro'
import Split from '@share_components/Split.astro'

import Row from '@assets/icons/row.svg'
import Grid from '@assets/icons/grid.svg'

const ARTICLES = [
  {
    year: '2025',
    articles: [
      {
        title: 'Lorem ipsum dolor sit ad',
      },
      {
        title: 'Lorem ipsum dolor sit ad',
      },
    ],
  },
  {
    year: '2024',
    articles: [
      {
        title: 'Lorem ipsum dolor sit ad',
      },
    ],
  },
]

const isYear = new Date().getFullYear()
---

<Layout title='Artículos'>
  <Split />

  <Container styles='py-10 grid gap-10'>
    <h2
      class='text-theme-title text-2xl sm:text-4xl font-bold uppercase mb-2 text-center'
    >
      Artículos
    </h2>

    <div class='grid gap-10'>
      <section class='flex gap-4 justify-between items-center flex-wrap'>
        <div class='flex-wrap gap-4 text-theme-text'>
          <button
            class='text-sm bg-theme-decoration/10 py-1 px-4 border-1 border-theme-decoration cursor-pointer'
          >
            Todos
          </button>
          <button
            class='text-sm py-1 px-4 border-1 border-theme-decoration cursor-pointer'
          >
            2025
          </button>
          <button
            class='text-sm py-1 px-4 border-1 border-theme-decoration cursor-pointer'
          >
            2024
          </button>
          <button
            class='text-sm py-1 px-4 border-1 border-theme-decoration cursor-pointer'
          >
            2023
          </button>
        </div>

        <div>
          <button
            id='btn-toggle-view-articles'
            class='grid place-content-center size-7 text-theme-text cursor-pointer'
            data-state='to-years'
          >
            <Grid class='w-full h-full to-years' />
            <Row class='w-full h-full time-line' />
          </button>
        </div>
      </section>

      <section class='to-years grid grid-cols-1 gap-5 md:grid-cols-2'>
        <CartArticle />
        <CartArticle />
        <CartArticle />
        <CartArticle />
        <CartArticle />
      </section>

      <section class='time-line pl-4 border-l-2 border-theme-split grid gap-4'>
        {
          ARTICLES.map(({ year, articles }) => (
            <div class='flex flex-col gap-2'>
              <header class='relative'>
                <span class='text-sm text-theme-title'>
                  {isYear.toString() === year ? 'Ahora' : year}
                </span>
                <div class='size-3 bg-theme-decoration rounded-full absolute -left-[23px] top-[7px]' />
              </header>

              <section class='grid grid-cols-1 gap-5 md:grid-cols-2'>
                {articles.map(({ title }) => (
                  <CartArticle title={title} />
                ))}
              </section>
            </div>
          ))
        }
      </section>
    </div>
  </Container>
</Layout>

<!-- Seleccionar si quiero ver los artículos por años o por linea de tiempo -->
<script is:inline>
  const $ = el => document.querySelector(el)
  const $$ = el => document.querySelectorAll(el)

  const btnToggleViewArticles = $('#btn-toggle-view-articles')

  const toYears = $$('.to-years')
  const timeLine = $$('.time-line')

  if (btnToggleViewArticles.dataset.state === 'to-years') {
    handleTimeLine()
  } else {
    handleToYear()
  }

  console.log(btnToggleViewArticles)

  btnToggleViewArticles.addEventListener('click', e => {
    console.log('-----------------------------------------')
    const type = e.currentTarget.dataset.state

    if (type === 'to-years') {
      handleToYear()
    } else {
      handleTimeLine()
    }

    const newType = type === 'to-years' ? 'time-line' : 'to-years'

    btnToggleViewArticles.setAttribute('data-state', newType)
  })

  function handleToYear() {
    toYears.forEach(el => el.classList.remove('hidden'))
    timeLine.forEach(el => el.classList.add('hidden'))
  }

  function handleTimeLine() {
    toYears.forEach(el => el.classList.add('hidden'))
    timeLine.forEach(el => el.classList.remove('hidden'))
  }
</script>
