---
import CartEvent from '@components/home/CartEvent.astro'
import Container from '@share_components/Container.astro'

import Arrow from '@assets/icons/arrow.svg'

import { getHomeEventsCard } from '@lib/api/get-home-events-card'

let events: any[] = []
let filters: string[] = []
let fetchError = false

try {
  events = await getHomeEventsCard()

  const filtersEvents: Set<string> = new Set()

  events.forEach(({ year }) => {
    filtersEvents.add(year)
  })

  filters = Array.from(filtersEvents)
} catch (error) {
  fetchError = true
}
---

<Container styles='py-10 grid gap-5 '>
  <h2
    class='text-theme-title mb-5 text-center text-2xl font-bold uppercase sm:text-4xl'
  >
    Eventos
  </h2>

  <div>
    <a
      href='/events'
      class='text-theme-text ml-auto flex w-max items-center gap-1 text-xs sm:text-sm'
    >
      Ver más eventos
      <Arrow class='size-4 sm:size-5' />
    </a>
  </div>

  <section class='grid grid-cols-1 gap-5 md:grid-cols-2'>
    {
      fetchError ? (
        <div class='col-span-full text-center text-red-600'>
          <p class='text-lg font-medium'>
            No se pudieron cargar los eventos. Intenta más tarde.
          </p>
        </div>
      ) : (
        <>
          {events.map(({ year, title, infoEvent }: any) =>
            infoEvent
              .slice(0, 9)
              .map(({ image, slug }: any) => (
                <CartEvent
                  title={title}
                  image={image}
                  slug={slug}
                  year={year}
                />
              ))
          )}
        </>
      )
    }
  </section>
</Container>

<!-- <section class='grid flex-wrap place-content-center gap-4'>
      <div class='text-theme-text flex flex-wrap gap-4'>
        <button
          data-btn-filter-event='all'
          class='bg-theme-decoration/20 border-theme-decoration cursor-pointer border-1 px-4 py-1 text-sm'
        >
          Todos
        </button>
        {
          filters.map((year: string) => (
            <button
              data-btn-filter-event={year}
              class='border-theme-decoration cursor-pointer border-1 px-4 py-1 text-sm'
            >
              {year}
            </button>
          ))
        }
        <a
          href='#'
          class='border-theme-decoration flex cursor-pointer items-center gap-2 border-1 px-4 py-1 text-sm'
        >
          Ver más
          <Arrow />
        </a>
      </div>
    </section> -->

<!-- Filter by year -->
<!-- <script>
  const styleBtnSelected = 'bg-theme-decoration/20'

  const btnFilterType = document.querySelectorAll('[data-btn-filter-event]')
  const filterTypes = document.querySelectorAll('[data-filter-event]')

  function removeAllFilter() {
    filterTypes.forEach(el => el.classList.remove('hidden'))
  }

  function selectBtnFilterType(type: string) {
    btnFilterType.forEach((el: any) => {
      if (el.dataset.btnFilterEvent === type) {
        el.classList.add(styleBtnSelected)
      } else {
        el.classList.remove(styleBtnSelected)
      }
    })
  }

  function handleFilterType(type: string) {
    filterTypes.forEach((el: any) => {
      const name: string[] = el.dataset.filterEvent.split(',')

      if (name.includes(type)) {
        el.classList.remove('hidden')
      } else {
        el.classList.add('hidden')
      }
    })
  }

  function init() {
    btnFilterType.forEach(button =>
      button.addEventListener('click', (e: any) => {
        const filter = e.currentTarget.dataset.btnFilterEvent

        selectBtnFilterType(filter)

        if (filter === 'all') {
          removeAllFilter()
          return
        }

        handleFilterType(filter)
      })
    )
  }

  init()
</script> -->
